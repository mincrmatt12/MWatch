# Helper script that sets up most of the PICO SDK targets
# Expects PICO_SDK_ROOT to be set

# Based heavily on the zephyr hal_rpi_pico CMakeLists.txt
include(min-pico-sdk-dirs)

add_library(picosdk_base INTERFACE)
target_include_directories(picosdk_base INTERFACE
    ${picosdk_rp2040_dir}/hardware_regs/include
    ${picosdk_rp2_common_dir}/pico_platform/include
    ${picosdk_common_dir}/pico_base/include
	# Mocks to fake autogenerated sdkconfig (raw header vs. cmake defs)
    ${CMAKE_CURRENT_LIST_DIR}/sdk_mock_include
)

# Create "picosdk" library which adds the bare minimum hardware requirements
add_library(picosdk STATIC
	# Common runtime requirements (clock setup, etc.)
	${picosdk_rp2_common_dir}/hardware_clocks/clocks.c
    ${picosdk_rp2_common_dir}/hardware_pll/pll.c
    ${picosdk_rp2_common_dir}/hardware_xosc/xosc.c
    ${picosdk_rp2_common_dir}/hardware_watchdog/watchdog.c
    ${picosdk_rp2_common_dir}/pico_platform/platform.c
    ${picosdk_rp2_common_dir}/pico_bootrom/bootrom.c
	# Hardware drivers
    ${picosdk_rp2_common_dir}/hardware_gpio/gpio.c
    ${picosdk_rp2_common_dir}/hardware_uart/uart.c
    ${picosdk_rp2_common_dir}/hardware_dma/dma.c
    ${picosdk_rp2_common_dir}/hardware_pio/pio.c
	# Claim helper
    ${picosdk_rp2_common_dir}/hardware_claim/claim.c
)

target_include_directories(picosdk PUBLIC
	# Common runtime requirements
	${picosdk_rp2_common_dir}/hardware_base/include
    ${picosdk_rp2_common_dir}/hardware_clocks/include
    ${picosdk_rp2_common_dir}/hardware_watchdog/include
    ${picosdk_rp2_common_dir}/hardware_xosc/include
    ${picosdk_rp2_common_dir}/hardware_pll/include
    ${picosdk_rp2_common_dir}/hardware_irq/include
    ${picosdk_rp2_common_dir}/hardware_sync/include
    ${picosdk_rp2_common_dir}/hardware_timer/include
    ${picosdk_rp2_common_dir}/hardware_resets/include
    ${picosdk_rp2_common_dir}/pico_bootrom/include
    ${picosdk_rp2040_dir}/hardware_structs/include
	# Hardware drivers
    ${picosdk_rp2_common_dir}/hardware_gpio/include
    ${picosdk_rp2_common_dir}/hardware_uart/include
    ${picosdk_rp2_common_dir}/hardware_dma/include
    ${picosdk_rp2_common_dir}/hardware_pio/include
    ${picosdk_rp2_common_dir}/hardware_pwm/include
)

target_include_directories(picosdk PRIVATE
	${picosdk_rp2_common_dir}/hardware_claim/include
)

target_link_libraries(picosdk picosdk_base)
# Avoid "duplicate inline warnings"
target_compile_options(picosdk_base INTERFACE -Wno-duplicate-decl-specifier)
# Specifically avoid linking functions that are unused -- this avoids us having to compile the irq library (which then
# requires a lot of the mutual exclusion stuff which we don't need to depend on; the irq library itself doesn't even help
# us other than enable/disable irq as we use our own custom ram vector table implementation)
target_compile_options(picosdk PRIVATE -ffunction-sections)
